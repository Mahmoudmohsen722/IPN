

CREATE COMPUTE MODULE provider_flow_Compute4
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE whiteSpace CONSTANT CHARACTER CAST( X'090D0A20' AS CHAR CCSID 1208);
		
		SET OutputLocalEnvironment.Destination.File.Name = InputRoot.JSON.Data.national_id || '.txt';
		
		
		
		IF Environment.Variables.Data.sender_channel = 'wallet' THEN
			SET OutputRoot.JSON.Data = InputRoot.JSON.Data;
			SET OutputRoot.JSON.Data.wallet_balance = InputRoot.JSON.Data.wallet_balance - Environment.Variables.Data.amount;
			SET Environment.Variables.withdraw = true;
			
		ELSE IF  Environment.Variables.Data.sender_channel = 'card' THEN
			SET OutputRoot.JSON.Data = InputRoot.JSON.Data;
			SET OutputRoot.JSON.Data.card_balance = InputRoot.JSON.Data.card_balance - Environment.Variables.Data.amount;
			SET Environment.Variables.withdraw = true;
			
		ELSE IF  Environment.Variables.Data.sender_channel = 'account' THEN
			SET OutputRoot.JSON.Data = InputRoot.JSON.Data;
			SET OutputRoot.JSON.Data.acc_balance = InputRoot.JSON.Data.acc_balance - Environment.Variables.Data.amount;
			SET Environment.Variables.withdraw = true;
			
		END IF;
		END IF;
		END IF;
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
