

CREATE COMPUTE MODULE acquirer_flow_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
BEGIN
		-- CALL CopyMessageHeaders();
		DECLARE whiteSpace CONSTANT CHARACTER CAST( X'090D0A20' AS CHAR CCSID 1208);
		
			IF Environment.Variables.Data.receiver_channel = 'wallet' THEN
				IF InputRoot.JSON.Data.wallet_number = Environment.Variables.Data.receiver_wallet_number THEN
						SET OutputRoot.JSON.Data = Environment.Variables.Data ;
						SET OutputRoot.JSON.Data.msg = 'validation DONE';
				ELSE
					SET OutputRoot.JSON.Data.msg = 'wallet number of receiver not valid';
				END IF;	
			
			ELSE IF Environment.Variables.Data.receiver_channel = 'account' THEN
				IF InputRoot.JSON.Data.acc_number = Environment.Variables.Data.receiver_acc_number THEN
						SET OutputRoot.JSON.Data = Environment.Variables.Data ;
						SET OutputRoot.JSON.Data.msg = 'validation DONE';
				ELSE
						SET OutputRoot.JSON.Data.msg = 'acc number of receiver not valid';
				END IF;
				
			ELSE IF Environment.Variables.Data.receiver_channel = 'card' THEN
				IF InputRoot.JSON.Data.card_number = Environment.Variables.Data.receiver_card_number THEN
						SET OutputRoot.JSON.Data = Environment.Variables.Data ;
						SET OutputRoot.JSON.Data.msg = 'validation DONE';
				ELSE
					SET OutputRoot.JSON.Data.msg = 'card number of receiver not valid';
				END IF;

			END IF;
			END IF;
			END IF;
			
 
		 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
